
[comment encoding = UTF-8 /]
[**
 * The documentation of the module cassandra.
 */]
[module postgres('http://www.example.org/observability_new')]


[**
 * The documentation of the template generateCassandra.
 * @param aNodeMachine
 */]
[template public generatePostgres(aCluster : DatabaseCluster)]

[for (machine : NodeMachine | aCluster.machines)]

[file ( machine.IP + 'collectdC.conf' , false, 'UTF-8')]
[let var : Model = machine.eContainer().eContainer()]
Interval [var.frequency/]
[/let]

<Plugin postgresql>
    <Query magic>
      Statement "SELECT magic FROM wizard WHERE host = $1;"
      Param hostname
      <Result>
        Type gauge
        InstancePrefix "magic"
        ValuesFrom magic
      </Result>
    </Query>
    <Query rt36_tickets>
      Statement "SELECT COUNT(type) AS count, type \
                        FROM (SELECT CASE \
                                     WHEN resolved = 'epoch' THEN 'open' \
                                     ELSE 'resolved' END AS type \
                                     FROM tickets) type \
                        GROUP BY type;"
      <Result>
        Type counter
        InstancePrefix "rt36_tickets"
        InstancesFrom "type"
        ValuesFrom "count"
      </Result>
    </Query>

    <Writer sqlstore>
      Statement "SELECT collectd_insert($1, $2, $3, $4, $5, $6, $7, $8, $9);"
      StoreRates true
    </Writer>


    <Database foo> @Machine
      Host @Machine
      Port @Machine
      User @Machine
      Password @Machine
      SSLMode @Machine
      KRBSrvName @Machine
      Query magic @Collect
    </Database>
    
  </Plugin>
[/file]
[/for]
[/template]