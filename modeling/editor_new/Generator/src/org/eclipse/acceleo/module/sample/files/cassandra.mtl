[comment encoding = UTF-8 /]
[**
 * The documentation of the module cassandra.
 */]
[module cassandra('http://www.example.org/observability_new')]


[**
 * The documentation of the template generateCassandra.
 * @param aNodeMachine
 */]
[template public generateCassandra(aCluster : DatabaseCluster, frequency : Integer)]

[for (machine : NodeMachine | aCluster.machines)]

[file ( machine.IP +  '_' + machine.Port + '_collectd.conf' , false, 'UTF-8')]
Interval [frequency/]
Hostname [machine.IP/]

LoadPlugin "logfile"

<Plugin "logfile">
  LogLevel "info"
  File "/home/owls/collectd/log/collectd.log"
  Timestamp true
  PrintSeverity true
</Plugin>

LoadPlugin "csv"

<Plugin "csv">  
  DataDir "/home/owls/collectd/csv"
  StoreRates true
</Plugin>

LoadPlugin df
<Plugin "df">
  IgnoreSelected true
</Plugin>

LoadPlugin interface
<Plugin "interface">
  IgnoreSelected true
</Plugin>

LoadPlugin cpu
LoadPlugin interface
LoadPlugin load
LoadPlugin memory
LoadPlugin java
LoadPlugin network


<Plugin "network">
  Server "45.55.197.112"
</Plugin>

<Plugin "java">

    JVMARG "-Djava.class.path=/opt/collectd/java-dep/generic-jmx.jar:/opt/collectd/java-dep/collectd-api.jar"
    LoadPlugin "org.collectd.java.GenericJMX"
<Plugin "GenericJMX">

    <MBean "load_metric">
        ObjectName "org.apache.cassandra.metrics:type=Storage,name=Load"
        <Value>
          Type "gauge"
          InstancePrefix "data_load"
          Attribute "Count"
        </Value>
    </MBean>

    <MBean "readcount_metric">
        ObjectName "org.apache.cassandra.metrics:type=ClientRequest,scope=Read,name=Latency"
        <Value>
          Type "gauge"
          InstancePrefix "ClientRequest_readCount"
          Attribute "Count"
        </Value>
    </MBean>

   <MBean "memory_metric">
        ObjectName "java.lang:type=Memory"
        <Value>
          Type "memory"
          InstancePrefix "heap_mem"
          Table true
          Attribute "HeapMemoryUsage"
        </Value>
    </MBean>

    
[let rootElement : Element = machine.hasParentElement]
  [for (element : Element | rootElement.hasElements)]
	[if element.name.strcmp('Connection') = 0]
    <Connection>
	  [for (keyValue : KeyValue | element.hasKeyValues)]
	  [keyValue.key/] "[keyValue.value/]"
	  [/for]
	  [for (m : BaseMetric | aCluster.collectedBaseMetric) ]
	  Collect "[m.name/]"		
	  [/for]	  	
    </Connection>
	[/if]
  [/for]
[/let]	    
  </Plugin>
</Plugin>
[/file]

[/for]

[/template]
