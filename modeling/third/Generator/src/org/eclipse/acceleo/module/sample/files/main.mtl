[comment encoding = UTF-8 /]
[module main('http://www.example.org/observability_new')/]
[import org::eclipse::acceleo::module::sample::files::cassandra/]
[import org::eclipse::acceleo::module::sample::files::mongodb/]
[import org::eclipse::acceleo::module::sample::files::postgres/]

[template public mainModel(aModel : Model)]
	
	[for (aDatabaseCluster:DatabaseCluster | aModel.clusters)]
	[comment @main /]
	[let dbType : DbType = aDatabaseCluster.associatedDbType]
	[if hasFile(dbType.name)]
		[if dbType.name.toLower().strcmp('cassandra') = 0]
			[aDatabaseCluster.generateCassandra(aModel.frequency)/]
		[elseif dbType.name.toLower().strcmp('mongodb') = 0]
			[aDatabaseCluster.generateMongodb(aModel.frequency)/]
		[elseif dbType.name.toLower().strcmp('postgres') = 0]
			[aDatabaseCluster.generatePostgres()/]
		[/if]
	[/if]
	[/let]
	[/for]
	
	[zipAll()/]
[/template]

[query public hasFile(arg0 : String) : Boolean
	= invoke('org.eclipse.acceleo.module.sample.services.DescriptorFiles', 'hasFile(java.lang.String)', Sequence{arg0})
/]

[query public zipAll(anOclAny: OclAny) : OclVoid
	= invoke('org.eclipse.acceleo.module.sample.services.DescriptorFiles', 'zipAll()', Sequence{})
/]

